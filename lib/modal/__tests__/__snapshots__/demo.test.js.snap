// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders ./components/modal/demo/basic.tsx correctly 1`] = `
<RCTScrollView
  style={
    Object {
      "marginTop": 20,
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {
            "marginLeft": 15,
            "marginRight": 15,
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            showModal
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            transparent:false
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            popup
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.alert
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.opertation
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.opertation (onBackHandler)
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.prompt (default)
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.prompt (login-password)
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.prompt (secure-text)
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "zIndex": 999,
        }
      }
    />
    <View
      style={
        Object {
          "zIndex": 999,
        }
      }
    />
    <View
      style={
        Object {
          "zIndex": 999,
        }
      }
    />
  </View>
</RCTScrollView>
`;
