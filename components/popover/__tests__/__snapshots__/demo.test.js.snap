// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders ./components/popover/demo/basic.tsx correctly 1`] = `
Array [
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#f5f5f9",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "borderTopColor": "#eeeeee",
          "borderTopWidth": 0.5,
          "position": "relative",
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "flexGrow": 1,
                "paddingLeft": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#dddddd",
                  "borderBottomWidth": 0.5,
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingRight": 15,
                  "paddingVertical": 6,
                },
                false,
                false,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text>
                选择了：
              </Text>
            </View>
            <View
              onSelect={[Function]}
              overlay={
                Array [
                  <PopoverItem
                    value="option 1"
                  >
                    <Text>
                      option 
                      1
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 2"
                  >
                    <Text>
                      option 
                      2
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 3"
                  >
                    <Text>
                      option 
                      3
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    disabled={true}
                    value="disabled"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#ddd",
                        }
                      }
                    >
                      disabled opt
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    style={
                      Object {
                        "backgroundColor": "#efeff4",
                      }
                    }
                    value="button ct"
                  >
                    <Text>
                      关闭
                    </Text>
                  </PopoverItem>,
                ]
              }
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 17,
                    "maxWidth": "70%",
                    "paddingLeft": 8,
                    "textAlign": "right",
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
              triggerStyle={
                Object {
                  "paddingHorizontal": 6,
                }
              }
            >
              <Text>
                菜单
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "flexGrow": 1,
                "paddingLeft": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#dddddd",
                  "borderBottomWidth": 0.5,
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingRight": 15,
                  "paddingVertical": 6,
                },
                false,
                false,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text>
                选择了：
              </Text>
            </View>
            <View
              onSelect={[Function]}
              overlay={
                Array [
                  <PopoverItem
                    value="option 1"
                  >
                    <Text>
                      option 
                      1
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 2"
                  >
                    <Text>
                      option 
                      2
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 3"
                  >
                    <Text>
                      option 
                      3
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    disabled={true}
                    value="disabled"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#ddd",
                        }
                      }
                    >
                      disabled opt
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    style={
                      Object {
                        "backgroundColor": "#efeff4",
                      }
                    }
                    value="button ct"
                  >
                    <Text>
                      关闭
                    </Text>
                  </PopoverItem>,
                ]
              }
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 17,
                    "maxWidth": "70%",
                    "paddingLeft": 8,
                    "textAlign": "right",
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
              triggerStyle={
                Object {
                  "paddingHorizontal": 6,
                }
              }
            >
              <Text>
                菜单
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "flexGrow": 1,
                "paddingLeft": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#dddddd",
                  "borderBottomWidth": 0.5,
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingRight": 15,
                  "paddingVertical": 6,
                },
                false,
                false,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text>
                选择了：
              </Text>
            </View>
            <View
              onSelect={[Function]}
              overlay={
                Array [
                  <PopoverItem
                    value="option 1"
                  >
                    <Text>
                      option 
                      1
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 2"
                  >
                    <Text>
                      option 
                      2
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 3"
                  >
                    <Text>
                      option 
                      3
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    disabled={true}
                    value="disabled"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#ddd",
                        }
                      }
                    >
                      disabled opt
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    style={
                      Object {
                        "backgroundColor": "#efeff4",
                      }
                    }
                    value="button ct"
                  >
                    <Text>
                      关闭
                    </Text>
                  </PopoverItem>,
                ]
              }
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 17,
                    "maxWidth": "70%",
                    "paddingLeft": 8,
                    "textAlign": "right",
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
              triggerStyle={
                Object {
                  "paddingHorizontal": 6,
                }
              }
            >
              <Text>
                菜单
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "flexGrow": 1,
                "paddingLeft": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#dddddd",
                  "borderBottomWidth": 0.5,
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingRight": 15,
                  "paddingVertical": 6,
                },
                false,
                false,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text>
                选择了：
              </Text>
            </View>
            <View
              onSelect={[Function]}
              overlay={
                Array [
                  <PopoverItem
                    value="option 1"
                  >
                    <Text>
                      option 
                      1
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 2"
                  >
                    <Text>
                      option 
                      2
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 3"
                  >
                    <Text>
                      option 
                      3
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    disabled={true}
                    value="disabled"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#ddd",
                        }
                      }
                    >
                      disabled opt
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    style={
                      Object {
                        "backgroundColor": "#efeff4",
                      }
                    }
                    value="button ct"
                  >
                    <Text>
                      关闭
                    </Text>
                  </PopoverItem>,
                ]
              }
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 17,
                    "maxWidth": "70%",
                    "paddingLeft": 8,
                    "textAlign": "right",
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
              triggerStyle={
                Object {
                  "paddingHorizontal": 6,
                }
              }
            >
              <Text>
                菜单
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "flexGrow": 1,
                "paddingLeft": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#dddddd",
                  "borderBottomWidth": 0.5,
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingRight": 15,
                  "paddingVertical": 6,
                },
                false,
                false,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text>
                选择了：
              </Text>
            </View>
            <View
              onSelect={[Function]}
              overlay={
                Array [
                  <PopoverItem
                    value="option 1"
                  >
                    <Text>
                      option 
                      1
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 2"
                  >
                    <Text>
                      option 
                      2
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 3"
                  >
                    <Text>
                      option 
                      3
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    disabled={true}
                    value="disabled"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#ddd",
                        }
                      }
                    >
                      disabled opt
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    style={
                      Object {
                        "backgroundColor": "#efeff4",
                      }
                    }
                    value="button ct"
                  >
                    <Text>
                      关闭
                    </Text>
                  </PopoverItem>,
                ]
              }
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 17,
                    "maxWidth": "70%",
                    "paddingLeft": 8,
                    "textAlign": "right",
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
              triggerStyle={
                Object {
                  "paddingHorizontal": 6,
                }
              }
            >
              <Text>
                菜单
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "flexGrow": 1,
                "paddingLeft": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#dddddd",
                  "borderBottomWidth": 0.5,
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingRight": 15,
                  "paddingVertical": 6,
                },
                false,
                false,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text>
                选择了：
              </Text>
            </View>
            <View
              onSelect={[Function]}
              overlay={
                Array [
                  <PopoverItem
                    value="option 1"
                  >
                    <Text>
                      option 
                      1
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 2"
                  >
                    <Text>
                      option 
                      2
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 3"
                  >
                    <Text>
                      option 
                      3
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    disabled={true}
                    value="disabled"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#ddd",
                        }
                      }
                    >
                      disabled opt
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    style={
                      Object {
                        "backgroundColor": "#efeff4",
                      }
                    }
                    value="button ct"
                  >
                    <Text>
                      关闭
                    </Text>
                  </PopoverItem>,
                ]
              }
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 17,
                    "maxWidth": "70%",
                    "paddingLeft": 8,
                    "textAlign": "right",
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
              triggerStyle={
                Object {
                  "paddingHorizontal": 6,
                }
              }
            >
              <Text>
                菜单
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "flexGrow": 1,
                "paddingLeft": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#dddddd",
                  "borderBottomWidth": 0.5,
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingRight": 15,
                  "paddingVertical": 6,
                },
                false,
                false,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text>
                选择了：
              </Text>
            </View>
            <View
              onSelect={[Function]}
              overlay={
                Array [
                  <PopoverItem
                    value="option 1"
                  >
                    <Text>
                      option 
                      1
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 2"
                  >
                    <Text>
                      option 
                      2
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 3"
                  >
                    <Text>
                      option 
                      3
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    disabled={true}
                    value="disabled"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#ddd",
                        }
                      }
                    >
                      disabled opt
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    style={
                      Object {
                        "backgroundColor": "#efeff4",
                      }
                    }
                    value="button ct"
                  >
                    <Text>
                      关闭
                    </Text>
                  </PopoverItem>,
                ]
              }
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 17,
                    "maxWidth": "70%",
                    "paddingLeft": 8,
                    "textAlign": "right",
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
              triggerStyle={
                Object {
                  "paddingHorizontal": 6,
                }
              }
            >
              <Text>
                菜单
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "flexGrow": 1,
                "paddingLeft": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#dddddd",
                  "borderBottomWidth": 0.5,
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingRight": 15,
                  "paddingVertical": 6,
                },
                false,
                false,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text>
                选择了：
              </Text>
            </View>
            <View
              onSelect={[Function]}
              overlay={
                Array [
                  <PopoverItem
                    value="option 1"
                  >
                    <Text>
                      option 
                      1
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 2"
                  >
                    <Text>
                      option 
                      2
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    value="option 3"
                  >
                    <Text>
                      option 
                      3
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    disabled={true}
                    value="disabled"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#ddd",
                        }
                      }
                    >
                      disabled opt
                    </Text>
                  </PopoverItem>,
                  <PopoverItem
                    style={
                      Object {
                        "backgroundColor": "#efeff4",
                      }
                    }
                    value="button ct"
                  >
                    <Text>
                      关闭
                    </Text>
                  </PopoverItem>,
                ]
              }
              style={
                Array [
                  Object {
                    "color": "#888888",
                    "fontSize": 17,
                    "maxWidth": "70%",
                    "paddingLeft": 8,
                    "textAlign": "right",
                    "textAlignVertical": "center",
                  },
                  undefined,
                ]
              }
              triggerStyle={
                Object {
                  "paddingHorizontal": 6,
                }
              }
            >
              <Text>
                菜单
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#eeeeee",
            "bottom": 0,
            "height": 0.5,
            "left": 0,
            "position": "absolute",
            "right": 0,
          }
        }
      />
    </View>
  </View>,
  <View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "margin": 16,
          }
        }
      >
        自定义组件
      </Text>
    </View>
    <Modal
      hardwareAccelerated={false}
      onDismiss={[Function]}
      onOrientationChange={[Function]}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    />
  </View>,
  <View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "margin": 16,
          }
        }
      >
        自定义动画
      </Text>
    </View>
    <Modal
      hardwareAccelerated={false}
      onDismiss={[Function]}
      onOrientationChange={[Function]}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    />
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "red",
          "margin": 16,
        }
      }
    >
      如果你设置了 placement 属性请确保你的内容够位置显示，默认是 auto 自动计算位置
    </Text>
    <View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "margin": 16,
            }
          }
        >
          left
        </Text>
      </View>
      <Modal
        hardwareAccelerated={false}
        onDismiss={[Function]}
        onOrientationChange={[Function]}
        onRequestClose={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
    <View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "margin": 16,
            }
          }
        >
          right
        </Text>
      </View>
      <Modal
        hardwareAccelerated={false}
        onDismiss={[Function]}
        onOrientationChange={[Function]}
        onRequestClose={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
    <View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "margin": 16,
            }
          }
        >
          top
        </Text>
      </View>
      <Modal
        hardwareAccelerated={false}
        onDismiss={[Function]}
        onOrientationChange={[Function]}
        onRequestClose={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
    <View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "margin": 16,
            }
          }
        >
          bottom
        </Text>
      </View>
      <Modal
        hardwareAccelerated={false}
        onDismiss={[Function]}
        onOrientationChange={[Function]}
        onRequestClose={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
]
`;
