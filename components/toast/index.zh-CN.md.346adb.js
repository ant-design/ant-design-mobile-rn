(self.webpackChunk_ant_design_react_native=self.webpackChunk_ant_design_react_native||[]).push([[9667],{103:n=>{n.exports={content:["article",["p","一种轻量级反馈/提示，可以用来显示不会打断用户操作的内容，适合用于页面转场、数据交互的等场景中。"],["h3","规则"],["ul",["li",["p","有 Icon 的 Toast，字数为 4-6 个；没有 Icon 的 Toast，字数不宜超过 14 个。"]]],["h2","API"],["p",["code","Toast"],"只支持指令式调用，入参类型为",["code","string | ToastProps"],"。"],["ul",["li",["p",["code","Toast.show(props)"]," - ",["code","5.2.1"],"新增"]],["li",["p",["code","Toast.success(props)"]]],["li",["p",["code","Toast.fail(props)"]]],["li",["p",["code","Toast.info(props)"]]],["li",["p",["code","Toast.loading(props)"]]],["li",["p",["code","Toast.offline(props)"]]]],["p",["code","Toast.show(string)"],"的默认配置是",["code","{duration:1.5, mask: false}"],"，其他方法是指定icon的快捷调用方式。"],["p","ToastProps 参数如下："],["table",["thead",["tr",["th","属性"],["th","说明"],["th","类型"],["th","必填"],["th","默认值"],["th","版本"]]],["tbody",["tr",["td","content"],["td","提示内容"],["td",["code","String | React.ReactNode"]],["td","是"],["td","-"],["td"]],["tr",["td","duration"],["td","自动关闭的延时，单位秒"],["td","number"],["td","否"],["td","3"],["td"]],["tr",["td","icon"],["td","图标"],["td",["code","'success' | 'fail' | 'offline' | 'loading' | React.ReactNode"]],["td","否"],["td","-"],["td",["code","5.2.1"]]],["tr",["td","mask"],["td","是否显示透明蒙层，防止触摸穿透"],["td","Boolean"],["td","否"],["td","true"],["td"]],["tr",["td","position"],["td","垂直方向显示位置"],["td",["code","'top' | 'bottom' | 'center'"]],["td","否"],["td",["code","'center'"]],["td",["code","5.2.1"]]],["tr",["td","onClose"],["td","关闭后回调"],["td","Function"],["td","否"],["td","-"],["td"]],["tr",["td","stackable"],["td","是否允许叠加显示"],["td","Boolean"],["td","否"],["td","true"],["td"]],["tr",["td","styles"],["td","语义化结构 style"],["td",["a",{title:null,href:"#toaststyle-语义化样式"},"ToastStyle"]],["td","否"],["td","-"],["td",["code","5.2.1"]]]]],["blockquote",["p",["strong","注："],"  duration = 0 时，onClose 无效，toast 不会消失，隐藏 toast 需要手动调用 remove"]],["pre",{lang:"js",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/react-native\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> key <span class="token operator">=</span> Toast<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token string">\'message\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nToast<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","import { Toast } from '@ant-design/react-native';\n\nconst key = Toast.loading('message');\nToast.remove(key);"]],["h3","Toast.removeAll"],["p","关闭所有显示中的 ",["code","Toast"],"。"],["pre",{lang:"ts",highlighted:'Toast<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code","Toast.removeAll()"]],["h3","Toast.config"],["p","全局配置，支持配置 ",["code","duration"],"、",["code","mask"],"、",["code","onClose"],"、",["code","position"],"、",["code","stackable"]," 和 ",["code","styles"],"。配置方法如下："],["pre",{lang:"ts",highlighted:'Toast<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span> duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> position<span class="token punctuation">:</span> <span class="token string">\'top\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment" spellcheck="true">// 可获取当前配置</span>\nToast<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code","Toast.config({ duration: 1, position: 'top' })\n\n// 可获取当前配置\nToast.getConfig()"]],["h3","Toast.useToast()"],["p",["code","5.3.0"],"新增。直接调用 Toast 方法，antd-mobile-rn 会通过 ",["code","Portal.add"]," 插入到 ",["code","<Provider>"]," 根节点下。其 context 与当前代码所在 context 并不相同，因而无法获取 context 信息。\n",["br"],"\n当你需要 context 信息（例如 Modal 配置的内容）时，可以通过 ",["code","toast.useToast"]," 方法会返回 ",["code","toastApi"]," 实体以及 ",["code","contextHolder"]," 节点。将其插入到你需要获取 context 位置即可："],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-native\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/react-native\'</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>toastApi<span class="token punctuation">,</span> contextHolder<span class="token punctuation">]</span> <span class="token operator">=</span> Toast<span class="token punctuation">.</span><span class="token function">useToast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> showLoading <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  toastApi<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span>\n    <span class="token comment" spellcheck="true">// ...</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">return</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Modal</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">{</span>contextHolder<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span><span class="token punctuation">></span></span>\n      <span class="token operator">...</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>View</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Modal</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","import { Modal } from 'react-native'\nimport { Toast } from '@ant-design/react-native'\n\nconst [toastApi, contextHolder] = Toast.useToast();\n\nconst showLoading = () => {\n  toastApi.loading(\n    // ...\n  );\n}\n\nreturn (\n  <Modal>\n    {contextHolder}\n    <View>\n      ...\n    </View>\n  </Modal>\n);"]],["h3","ToastStyle 语义化样式"],["pre",{lang:"typescript",highlighted:'<span class="token keyword">interface</span> <span class="token class-name">ToastStyle</span> <span class="token punctuation">{</span>\n  container<span class="token punctuation">:</span> ViewStyle\n  innerContainer<span class="token punctuation">:</span> ViewStyle\n  innerWrap<span class="token punctuation">:</span> ViewStyle\n  iconToast<span class="token punctuation">:</span> ViewStyle\n  textToast<span class="token punctuation">:</span> ViewStyle\n  content<span class="token punctuation">:</span> TextStyle\n  image<span class="token punctuation">:</span> TextStyle\n  centering<span class="token punctuation">:</span> ViewStyle\n<span class="token punctuation">}</span>'},["code","interface ToastStyle {\n  container: ViewStyle\n  innerContainer: ViewStyle\n  innerWrap: ViewStyle\n  iconToast: ViewStyle\n  textToast: ViewStyle\n  content: TextStyle\n  image: TextStyle\n  centering: ViewStyle\n}"]]],meta:{category:"Components",type:"Feedback",title:"Toast",subtitle:"轻提示",version:"update",filename:"components/toast/index.zh-CN.md"}}}}]);