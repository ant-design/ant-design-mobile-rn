// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders ./components/swipe-action/demo/basic.tsx correctly 1`] = `
<View
  style={
    Object {
      "paddingTop": 30,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "borderTopColor": "#dddddd",
          "borderTopWidth": 0.5,
        }
      }
    >
      <View
        collapsable={false}
        forwardedRef={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onLayout={[Function]}
        style={
          Object {
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": -10000,
                },
              ],
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "width": 120,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": -0,
                    },
                  ],
                }
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.105}
                collapsable={false}
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "blue",
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
                underlayColor="black"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "black",
                      "borderBottomLeftRadius": undefined,
                      "borderBottomRightRadius": undefined,
                      "borderRadius": undefined,
                      "borderTopLeftRadius": undefined,
                      "borderTopRightRadius": undefined,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "color": "white",
                        "fontSize": 16,
                        "padding": 10,
                      },
                      undefined,
                      Object {
                        "color": "white",
                      },
                    ]
                  }
                >
                  Read
                </Text>
              </RNGestureHandlerButton>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": -60,
                    },
                  ],
                }
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.105}
                collapsable={false}
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "green",
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
                underlayColor="black"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "black",
                      "borderBottomLeftRadius": undefined,
                      "borderBottomRightRadius": undefined,
                      "borderRadius": undefined,
                      "borderTopLeftRadius": undefined,
                      "borderTopRightRadius": undefined,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "color": "white",
                        "fontSize": 16,
                        "padding": 10,
                      },
                      undefined,
                      Object {
                        "color": "white",
                      },
                    ]
                  }
                >
                  Reply
                </Text>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            onLayout={[Function]}
          />
        </View>
        <View
          style={
            Object {
              "bottom": 0,
              "flexDirection": "row-reverse",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": -10000,
                },
              ],
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "width": 120,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 120,
                    },
                  ],
                }
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.105}
                collapsable={false}
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "orange",
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
                underlayColor="black"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "black",
                      "borderBottomLeftRadius": undefined,
                      "borderBottomRightRadius": undefined,
                      "borderRadius": undefined,
                      "borderTopLeftRadius": undefined,
                      "borderTopRightRadius": undefined,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "color": "white",
                        "fontSize": 16,
                        "padding": 10,
                      },
                      undefined,
                      Object {
                        "color": "white",
                      },
                    ]
                  }
                >
                  More
                </Text>
              </RNGestureHandlerButton>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 60,
                    },
                  ],
                }
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.105}
                collapsable={false}
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "red",
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
                underlayColor="black"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "black",
                      "borderBottomLeftRadius": undefined,
                      "borderBottomRightRadius": undefined,
                      "borderRadius": undefined,
                      "borderTopLeftRadius": undefined,
                      "borderTopRightRadius": undefined,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "color": "white",
                        "fontSize": 16,
                        "padding": 10,
                      },
                      undefined,
                      Object {
                        "color": "white",
                      },
                    ]
                  }
                >
                  Delete
                </Text>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            onLayout={[Function]}
          />
        </View>
        <View
          collapsable={false}
          forwardedRef={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          pointerEvents="auto"
          style={
            Object {
              "transform": Array [
                Object {
                  "translateX": -0,
                },
              ],
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffff",
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "paddingLeft": 15,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderBottomColor": "#dddddd",
                      "borderBottomWidth": 0.5,
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                      "paddingRight": 15,
                      "paddingVertical": 6,
                    },
                    false,
                    false,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "flexDirection": "column",
                      },
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontSize": 17,
                          "textAlignVertical": "center",
                        },
                      ]
                    }
                  >
                    Simple example: left and right buttons
                  </Text>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "flexDirection": "column",
                      },
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#888888",
                          "fontSize": 17,
                          "textAlign": "right",
                          "textAlignVertical": "center",
                        },
                      ]
                    }
                  >
                    extra content
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#ffffff",
              "borderBottomColor": "#dddddd",
              "borderBottomWidth": 0.5,
              "bottom": 0,
              "height": 1,
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;
