(self.webpackChunk_ant_design_react_native=self.webpackChunk_ant_design_react_native||[]).push([[6271],{44585:t=>{t.exports={content:["article",["p","iOS-style swipeout buttons that appear from behind a component."],["h3","Definition"],["p","Call out operations from one side of screen with gesture."],["h3","Rules"],["ol",["li",["p","Only one row can be swiped at a time."]],["li",["p","Can hide operations by clicking outside of buttons or swiping the list backforwards."]]],["h2","API"],["h3","SwipeAction"],["table",["thead",["tr",["th","Properties"],["th","Descrition"],["th","Type"],["th","Default"],["th","Version"]]],["tbody",["tr",["td","closeOnAction"],["td","Whether to return to the position automatically when the operation button is clicked"],["td",["code","boolean"]],["td",["code","true"]],["td",["code","5.2.0"]]],["tr",["td","closeOnTouchOutside"],["td","Whether to return to the position automatically when other areas is clicked"],["td",["code","boolean"]],["td",["code","false"]],["td",["code","5.2.0"]]],["tr",["td","left"],["td","List of operation buttons on the left"],["td",["a",{title:null,href:"/components/swipe-action#swipeoutbuttonprops"},"SwipeoutButtonProps"],"[]"],["td",["code","[]"]],["td"]],["tr",["td","right"],["td","List of operation buttons on the right"],["td",["a",{title:null,href:"/components/swipe-action#swipeoutbuttonprops"},"SwipeoutButtonProps"],"[]"],["td",["code","[]"]],["td"]],["tr",["td","styles"],["td","Semantic DOM style"],["td",["a",{title:null,href:"/components/swipe-action#swipeactionstyle-interface"},"SwipeActionStyle"]],["td","-"],["td",["code","5.2.0"]]]]],["p","The rest of the props of ",["code","SwipeAction"]," are exactly the same as ",["a",{title:null,href:"https://docs.swmansion.com/react-native-gesture-handler/docs/components/swipeable/"},"react-native-gesture-handler/Swipeable"],","],["p",["strong","eg: ",["code","onSwipeableOpen"]," , ",["code","onSwipeableClose"]," , ",["code","renderLeftActions"]," , ",["code","renderRightActions"]]],["p","When you set ",["code","renderLeftActions"]," prop, it will override ",["code","left"]," prop; ",["br"],"\nwhen you set ",["code","renderRightActions"]," prop, it will override ",["code","right"]," prop."],["h3","SwipeoutButtonProps"],["table",["thead",["tr",["th","Properties"],["th","Descrition"],["th","Type"],["th","Default"],["th","Version"]]],["tbody",["tr",["td","backgroundColor"],["td","background color"],["td",["code","string"]],["td","-"],["td"]],["tr",["td","color"],["td","font color"],["td",["code","string"]],["td","-"],["td"]],["tr",["td","disabled"],["td","Whether disabled"],["td",["code","boolean"]],["td","-"],["td"]],["tr",["td","onPress"],["td","Trigger when clicked"],["td",["code","() => void | Promise<any>"]],["td","-"],["td",["code","5.2.0"]," support async"]],["tr",["td","style"],["td","Aaction button style, effective when ",["code","text"]," is ",["code","string"]],["td",["code","StyleProp<TextStyle>"]],["td","-"],["td"]],["tr",["td","text"],["td","Text"],["td",["code","string | ReactNode"]],["td","-"],["td"]],["tr",["td","actionButtonProps"],["td","Rest props"],["td",["a",{title:null,href:"https://docs.swmansion.com/react-native-gesture-handler/docs/components/buttons/#rectbutton"},"RectButtonProps"]],["td","-"],["td",["code","5.2.0"]]]]],["h3","SwipeActionStyle interface"],["pre",{lang:"typescript",highlighted:'<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">SwipeActionStyle</span> <span class="token punctuation">{</span>\n  actionButton<span class="token punctuation">:</span> ViewStyle\n  actionText<span class="token punctuation">:</span> TextStyle\n<span class="token punctuation">}</span>'},["code","export interface SwipeActionStyle {\n  actionButton: ViewStyle\n  actionText: TextStyle\n}"]],["h3","Ref"],["p","New in ",["code","5.2.0"],". Ref to Swipeable",["a",{title:null,href:"https://docs.swmansion.com/react-native-gesture-handler/docs/components/swipeable/#methods"},"#Ref"]],["table",["thead",["tr",["th","Properties"],["th","Descrition"],["th","Type"]]],["tbody",["tr",["td","close"],["td","method that closes component"],["td",["code","() => void"]]],["tr",["td","openLeft"],["td","method that opens component on left side."],["td",["code","() => void"]]],["tr",["td","openRight"],["td","method that opens component on right side."],["td",["code","() => void"]]],["tr",["td","reset"],["td","method that resets the swiping states of this ",["code","Swipeable"]," component.",["br"],"Unlike method ",["code","close"],", this method does not trigger any animation."],["td",["code","() => void"]]]]]],meta:{category:"Components",type:"Gesture",title:"SwipeAction",version:"5.2.0-rc.1",filename:"components/swipe-action/index.en-US.md"}}}}]);