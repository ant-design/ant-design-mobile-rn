(self.webpackChunk_ant_design_react_native=self.webpackChunk_ant_design_react_native||[]).push([[4846],{74262:a=>{a.exports={content:["article",["p","走马灯，轮播图"],["h2","API"],["table",["thead",["tr",["th","属性"],["th","说明"],["th","类型"],["th","默认值"],["th","版本"]]],["tbody",["tr",["td","afterChange"],["td","切换面板后的回调函数"],["td","(current: number) => void"],["td","无"],["td"]],["tr",["td","autoplay"],["td","是否自动切换"],["td","Boolean"],["td","false"],["td"]],["tr",["td","autoplayInterval"],["td","自动切换的时间间隔"],["td","Number"],["td","3000"],["td"]],["tr",["td","dots"],["td","是否显示面板指示点"],["td","Boolean"],["td","true"],["td"]],["tr",["td","dotStyle"],["td","指示点样式"],["td","ViewStyle"],["td","无"],["td"]],["tr",["td","dotActiveStyle"],["td","当前激活的指示点样式"],["td","ViewStyle"],["td","无"],["td"]],["tr",["td","infinite"],["td","是否循环播放"],["td","Boolean"],["td","false"],["td"]],["tr",["td","lazy"],["td","是否懒加载。支持布尔值或函数返回"],["td","Boolean ","|"," ",["code","(index:number) => boolean"]],["td","false"],["td",["code","5.3.1"]]],["tr",["td","renderLazyPlaceholder"],["td","返回自定义 React 元素以呈现尚未呈现的页面的回调。以",["code","索引"],"作为参数的对象。需要启用 ",["code","lazy"]," 属性。"],["td",["code","(index:number) => ReactNode"]],["td","-"],["td",["code","5.3.1"]]],["tr",["td","pageStyle"],["td","轮播页内样式"],["td","ViewStyle"],["td","无"],["td"]],["tr",["td","pagination"],["td","自定义 pagination"],["td","(props) => ReactNode"],["td"],["td"]],["tr",["td","selectedIndex"],["td","手动设置当前显示的索引"],["td","number"],["td","0"],["td"]],["tr",["td","style"],["td","轮播容器样式",["br"],"(建议设置，整体轮播大小由容器决定非页内决定)"],["td","ViewStyle"],["td","无"],["td"]],["tr",["td","vertical"],["td","垂直显示"],["td","Boolean"],["td","false"],["td"]],["tr",["td","onScrollAnimationEnd"],["td","当滚动动画结束时调用"],["td","()=>void"],["td","无"],["td",["code","5.3.0"]]]]],["p","Carousel 的其他属性和 react-native 内置组件",["a",{title:null,href:"https://reactnative.dev/docs/scrollview.html"},"ScrollView"]," 一致;",["br"],"\n比如：",["code","scrollEnabled"],"、",["code","onScroll"]," (若设置后不生效则为Carousel强制属性)"],["h2","Carousel methods"],["table",["thead",["tr",["th","属性"],["th","说明"],["th","类型"]]],["tbody",["tr",["td","goTo"],["td","跳转到指定位置"],["td",["code","(index: number, animated?: boolean) => void"]]],["tr",["td","scrollNextPage"],["td","滚动到下一页"],["td",["code","() => void"]]]]],["h2","FAQ"],["h3","1. 在Android平台，ScrollView中嵌套使用Carousel，会发生Carousel Item不能滑动的情况，怎么办？"],["p",["code","5.1.3"],"新增支持。 设置",["code","ScrollView"],"的",["code","nestedScrollEnabled"],"属性为",["code","true"],"即可。"],["pre",{lang:"jsx",highlighted:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ScrollView</span> <span class="token attr-name">nestedScrollEnabled</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token operator">...</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> <span class="token attr-name">vertical</span><span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ScrollView</span><span class="token punctuation">></span></span>'},["code","<ScrollView nestedScrollEnabled={true}>\n  ...\n  <Carousel vertical/>\n</ScrollView>"]],["h3","2. 使用 lazy 和 renderLazyPlaceholder 属性懒加载提高性能"],["p",["code","5.3.1"],"新增支持。"],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// lazy={true} 表示只渲染当前page</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> \n  <span class="token attr-name">lazy</span>\n  <span class="token attr-name">renderLazyPlaceholder</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Loading</span> <span class="token punctuation">/></span></span> <span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// 渲染相邻的page，总共3个page</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> \n  <span class="token attr-name">lazy</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>selectedIndex <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">></span></span>'},["code","// lazy={true} 表示只渲染当前page\n<Carousel \n  lazy\n  renderLazyPlaceholder={()=> <Loading /> }\n/>\n\n// 渲染相邻的page，总共3个page\n<Carousel \n  lazy={(i) => Math.abs(selectedIndex - i) < 2}\n>"]],["h3","3. Carousel和 ",["code","react-native-pager-view"]," 有什么区别（或优势）？"],["p","首先，Carousel支持",["code","infinite"],"属性，即🌟真正的无限循环🌟。 ",["br"],"\n其次，Carousel是完全基于",["code","ScrollView"],"实现，不仅更轻量，且更具有兼容性。"]],meta:{category:"Components",type:"Data Display",title:"Carousel",subtitle:"走马灯",filename:"components/carousel/index.zh-CN.md"}}}}]);