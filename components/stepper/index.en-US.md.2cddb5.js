(self.webpackChunk_ant_design_react_native=self.webpackChunk_ant_design_react_native||[]).push([[2757],{63019:e=>{e.exports={content:["article",["p",["code","Stepper"]," can be used to increase or decrease value step by step."],["h3","Rule"],["ul",["li",["p","When you want to make small adjustments to the value, you can use ",["code","Stepper"],". eg: Adjust the annual return from 4.00% to 4.05%."]]],["h2","API"],["table",["thead",["tr",["th","Name"],["th","Description"],["th","Type"],["th","Default"],["th","Version"]]],["tbody",["tr",["td","allowEmpty"],["td","Whether to allow empty content."],["td",["code","boolean"]],["td",["code","false"]]],["tr",["td","defaultValue"],["td","Default value"],["td",["code","number \\| null"]],["td",["code","0"]]],["tr",["td","digits"],["td","Format to a fixed number of digits after the decimal point, set to ",["code","0"]," means format to integer. Will use ",["code","formatter"]," as display value when configured"],["td",["code","number"]],["td","-"],["td","5.2.0"]],["tr",["td","disabled"],["td","Whether to disabled Stepper"],["td",["code","boolean"]],["td",["code","false"]]],["tr",["td","formatter"],["td","Format value in input"],["td",["code","(value?: number) => string"]],["td","-"],["td","5.2.0"]],["tr",["td","inputStyle"],["td","TextInput style"],["td",["code","StyleProp<TextStyle>"]],["td","-"]],["tr",["td","max"],["td","Max value"],["td",["code","number"]],["td","-"]],["tr",["td","min"],["td","Min value"],["td",["code","number"]],["td","-"]],["tr",["td","minusButtonProps"],["td","The minus button props"],["td",["a",{title:null,href:"https://reactnative.dev/docs/touchablehighlight"},"TouchableHighlightProps"]],["td",["code","{ activeOpacity:1, underlayColor:'#ddd', children: <Text>-</Text>, delayLongPress:500  }"]],["td","5.2.0"]],["tr",["td","plusButtonProps"],["td","The plus button props"],["td",["a",{title:null,href:"https://reactnative.dev/docs/touchablehighlight"},"TouchableHighlightProps"]],["td",["code","{ activeOpacity:1, underlayColor:'#ddd', children: <Text>+</Text>, delayLongPress:500  }"]],["td","5.2.0"]],["tr",["td","onChange"],["td","Callback when value is changed"],["td",["code","(value: number \\| null) => void"]],["td","-"]],["tr",["td","parser"],["td","Parse input text into number which should work with ",["code","formatter"]],["td",["code","(text: string) => number"]],["td","-"],["td","5.2.0"]],["tr",["td","step"],["td","The value to increase or decrease each time, can be a decimal"],["td",["code","number"]],["td",["code","1"]]],["tr",["td","stringMode"],["td","Set value as string to support high precision decimals. Will set ",["code","defaultValue"],",",["code","value"],", ",["code","min"],", ",["code","max"],", ",["code","onChange"]," to ",["code","string"]," type"],["td",["code","boolean"]],["td",["code","false"]],["td","5.2.0"]],["tr",["td","styles"],["td","Semantic DOM style"],["td",["a",{title:null,href:"#stepperstyle-interface"},"StepperStyle"]],["td","-"],["td","5.2.0"]],["tr",["td","value"],["td","Current number, controlled value"],["td",["code","number \\| null"]],["td","-"]]]],["ul",["li",["p","New in ",["code","5.2.0"],". In addition, all properties of react-native ",["a",{title:null,href:"http://facebook.github.io/react-native/docs/textinput.html"},"TextInput"]," are supported, eg: ",["strong",["code","readOnly"]]," ",["strong",["code","onFocus"]]," ",["strong",["code","onBlur"]]]],["li",["p","New in ",["code","5.2.0"],". Support ",["strong","Long Press To Trigger"]," increment or decrement; customizable execution timing: ",["code","plusButtonProps={{ delayLongPress: 500 }}"],"."]],["li",["p","When ",["code","allowEmpty"]," is ",["code","true"],", the ",["code","value"]," parameter of ",["code","onChange"]," may be ",["strong",["code","null"]],", please pay attention when using it."]]],["h3","StepperStyle interface"],["p",["code","5.2.0"],"refactored the styles"],["pre",{lang:"typescript",highlighted:'<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">StepperStyle</span> <span class="token keyword">extends</span> <span class="token class-name">Partial</span><span class="token operator">&lt;</span>InputStyle<span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// extends InputStyle</span>\n  container<span class="token punctuation">:</span> ViewStyle\n  input<span class="token punctuation">:</span> ViewStyle\n  prefix<span class="token punctuation">:</span> ViewStyle <span class="token comment" spellcheck="true">// for minus button</span>\n  suffix<span class="token punctuation">:</span> ViewStyle <span class="token comment" spellcheck="true">// for plus button</span>\n\n  <span class="token comment" spellcheck="true">// StepperStyle</span>\n  inputDisabled<span class="token punctuation">:</span> TextStyle\n  stepWrap<span class="token punctuation">:</span> ViewStyle\n  stepText<span class="token punctuation">:</span> TextStyle\n  stepDisabled<span class="token punctuation">:</span> ViewStyle\n  disabledStepTextColor<span class="token punctuation">:</span> TextStyle\n<span class="token punctuation">}</span>'},["code","export interface StepperStyle extends Partial<InputStyle> {\n  // extends InputStyle\n  container: ViewStyle\n  input: ViewStyle\n  prefix: ViewStyle // for minus button\n  suffix: ViewStyle // for plus button\n\n  // StepperStyle\n  inputDisabled: TextStyle\n  stepWrap: ViewStyle\n  stepText: TextStyle\n  stepDisabled: ViewStyle\n  disabledStepTextColor: TextStyle\n}"]],["h2","Ref"],["p","Same as ",["a",{title:null,href:"/components/input#ref"},"component/Input"]]],meta:{category:"Components",type:"Data Entry",title:"Stepper",version:"5.2.0-rc.1",filename:"components/stepper/index.en-US.md"}}}}]);