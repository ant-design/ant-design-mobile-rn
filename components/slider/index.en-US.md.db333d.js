(self.webpackChunk_ant_design_react_native=self.webpackChunk_ant_design_react_native||[]).push([[6218],{54027:e=>{e.exports={content:["article",["p","A Slider component for selecting particular value in range, eg: controls the display brightness of the screen."],["h3","Rule"],["ul",["li",["p","By default, the minimum value in the left and maximum value in the right of ",["code","Slider"]," ."]],["li",["p","Generally ",["code","Slider"]," is positioned horizontally."]]],["h2","API"],["table",["thead",["tr",["th","Properties"],["th","Description"],["th","Type"],["th","Default"],["th","Version"]]],["tbody",["tr",["td","defaultValue"],["td","Default value"],["td",["code","number"]," ","|",["br"]," ",["code","[number, number]"]],["td",["code","range ? [0, 0] : 0"]],["td"]],["tr",["td","disabled"],["td","Whether disabled"],["td",["code","boolean"]],["td",["code","false"]],["td"]],["tr",["td","icon"],["td","The icon of slider"],["td",["code","ReactNode"]],["td","-"],["td"]],["tr",["td","marks"],["td","Tick marks"],["td",["code","{ [key: number]: React.ReactNode }"]],["td","-"],["td",["code","5.2.1"]]],["tr",["td","max"],["td","Max value"],["td",["code","number"]],["td",["code","100"]],["td"]],["tr",["td","min"],["td","Min value"],["td",["code","number"]],["td",["code","0"]],["td"]],["tr",["td","onAfterChange"],["td","Consistent with the trigger timing of ",["code","touchend"],", pass the current value as a parameter"],["td",["code","(value: number | [number, number]) => void"]],["td","-"],["td"]],["tr",["td","onChange"],["td","Triggered when the slider is dragged, and the current dragged value is passed in as a parameter"],["td",["code","(value: number | [number, number]) => void"]],["td","-"],["td"]],["tr",["td","popover"],["td","Whether to display the popover when dragging. Support passing in function to customize the rendering content."],["td",["code","boolean | ((value: number) => ReactNode)"]],["td",["code","false"]],["td",["code","5.2.1"]]],["tr",["td","residentPopover"],["td","Whether the ",["code","popover"]," is permanently displayed , this attribute takes effect when ",["code","popover"]," exists"],["td",["code","boolean"]],["td",["code","false"]],["td",["code","5.2.1"]]],["tr",["td","range"],["td","Whether it is a double sliders"],["td",["code","boolean"]],["td",["code","false"]],["td",["code","5.2.1"]]],["tr",["td","step"],["td","Step distance, the value must be greater than ",["code","0"],", and ",["code","(max-min)"]," can be divisible by ",["code","step"],". When ",["code","marks"]," is not null, the configuration of ",["code","step"]," is invalid"],["td",["code","number"]],["td",["code","1"]],["td",["code","5.2.1"]]],["tr",["td","style"],["td","Container style"],["td",["code","StyleProp<ViewStyle>"]],["td","-"],["td"]],["tr",["td","styles"],["td","Semantic DOM style"],["td",["a",{title:null,href:"#sliderstyle-interface"},"SliderStyle"]],["td","-"],["td",["code","5.2.1"]]],["tr",["td","ticks"],["td","Whether to display the scale"],["td",["code","boolean"]],["td",["code","false"]],["td",["code","5.2.1"]]],["tr",["td","value"],["td","Current value"],["td",["code","number"]," ","|",["br"]," ",["code","[number, number]"]],["td","-"],["td"]]]],["blockquote",["p","The returned ",["code","value"]," format is ",["code","[number, number]"]," when ",["code","range={true}"],", otherwise it is ",["code","number"],"."]],["h3","SliderStyle interface"],["pre",{lang:"typescript",highlighted:'<span class="token keyword">interface</span> <span class="token class-name">SliderStyle</span> <span class="token punctuation">{</span>\n  slider<span class="token punctuation">:</span> ViewStyle <span class="token comment" spellcheck="true">// Same as `style`</span>\n  disabled<span class="token punctuation">:</span> ViewStyle\n  trackContianer<span class="token punctuation">:</span> ViewStyle <span class="token comment" spellcheck="true">// track container</span>\n  track<span class="token punctuation">:</span> ViewStyle <span class="token comment" spellcheck="true">// track line</span>\n  fill<span class="token punctuation">:</span> ViewStyle <span class="token comment" spellcheck="true">// Filled portion of the track line</span>\n\n  <span class="token comment" spellcheck="true">// Track button wrap + shadow style</span>\n  thumb<span class="token punctuation">:</span> ViewStyle\n\n  <span class="token comment" spellcheck="true">// Tick</span>\n  ticks<span class="token punctuation">:</span> ViewStyle\n  tick<span class="token punctuation">:</span> ViewStyle\n  tickActive<span class="token punctuation">:</span> ViewStyle\n\n  <span class="token comment" spellcheck="true">// Mark within the tick</span>\n  mark<span class="token punctuation">:</span> ViewStyle\n  markText<span class="token punctuation">:</span> TextStyle\n  markTextActive<span class="token punctuation">:</span> TextStyle\n<span class="token punctuation">}</span>'},["code","interface SliderStyle {\n  slider: ViewStyle // Same as `style`\n  disabled: ViewStyle\n  trackContianer: ViewStyle // track container\n  track: ViewStyle // track line\n  fill: ViewStyle // Filled portion of the track line\n\n  // Track button wrap + shadow style\n  thumb: ViewStyle\n\n  // Tick\n  ticks: ViewStyle\n  tick: ViewStyle\n  tickActive: ViewStyle\n\n  // Mark within the tick\n  mark: ViewStyle\n  markText: TextStyle\n  markTextActive: TextStyle\n}"]]],meta:{category:"Components",type:"Data Entry",title:"Slider",version:"update",filename:"components/slider/index.en-US.md"}}}}]);