(self.webpackChunk_ant_design_react_native=self.webpackChunk_ant_design_react_native||[]).push([[9354],{73832:t=>{t.exports={content:["article",["p","Entering content through the keyboard is the most basic form field wrapper."],["h3","Rule"],["ul",["li",["p","It is generally used in form pages to collect information, and provides two types of text boxes and text-area boxes."]],["li",["p","The Input component is layout-independent. It can be used with the ",["code","List"]," component for quick layout; it also has built-in linkage interaction with the ",["code","Form"]," component."]]],["h2","API"],["h3","Input"],["table",["thead",["tr",["th","Properties"],["th","Description"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","allowClear"],["td","If allow to remove input content with clear icon"],["td",["code","boolean"]," ","|"," ",["code","{ clearIcon: ReactNode }"]],["td","-"]],["tr",["td","defaultValue"],["td","The initial input content"],["td","string"],["td","-"]],["tr",["td","disabled"],["td","Whether the input is disabled"],["td","boolean"],["td","false"]],["tr",["td","maxLength"],["td","The maximum number of characters in Input"],["td","number"],["td","-"]],["tr",["td","prefix"],["td","The prefix icon for the Input"],["td","ReactNode"],["td","-"]],["tr",["td","showCount"],["td","Whether to show character count"],["td",["code","boolean"]," ","|"," ",["code","{ formatter: (info: { value: string, count: number, maxLength?: number }) => ReactNode }"]],["td","false"]],["tr",["td","status"],["td","Set validation status"],["td","'error' ","|"," 'warning'"],["td","-"]],["tr",["td","inputStyle"],["td","TextInput style"],["td",["code","StyleProp<TextStyle>"]],["td","-"]],["tr",["td","style"],["td","Container style"],["td",["code","StyleProp<ViewStyle>"]],["td","-"]],["tr",["td","styles"],["td","Semantic DOM style"],["td",["a",{title:null,href:"#inputstyle-interface"},"InputStyle"]],["td","-"]],["tr",["td","suffix"],["td","The suffix icon for the Input"],["td","ReactNode"],["td","-"]],["tr",["td","type"],["td","Declare the Input type, the same as the native ",["a",{title:null,href:"http://facebook.github.io/react-native/docs/textinput.html#keyboardtype"},"keyboardType"]," attribute"],["td","'text' ","|"," 'number' ","|"," 'password' ","|"," KeyboardTypeOptions"],["td",["code","text"]]],["tr",["td","value"],["td","The input content value"],["td","string"],["td","-"]],["tr",["td","onChange"],["td","Callback when user input, extra return ",["code","e.target.value"]],["td",["code","(e: NativeSyntheticEvent<TextInputChangeEventData>) => void;"]],["td","-"]]]],["p","The rest of the props of Input are exactly the same as the react-native ",["a",{title:null,href:"http://facebook.github.io/react-native/docs/textinput.html"},"TextInput"],"."],["h3","Input.TextArea"],["p","Same as Input, and more:"],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","autoSize"],["td","Height auto size feature, can be set to ",["code","true"]," ","|"," ",["code","false"]," or an object ",["code","{ minRows: 2, maxRows: 6 }"]],["td","boolean ","|"," object"],["td","false"]],["tr",["td","rows"],["td","sets the number of lines for a textarea.\tPrioritize",["code","autoSize"]],["td","number"],["td","2"]],["tr",["td","styles"],["td","Semantic DOM style"],["td",["a",{title:null,href:"#inputstyle-interface"},"InputStyle"]],["td","-"]]]],["h3","InputStyle interface"],["pre",{lang:"typescript",highlighted:'<span class="token keyword">interface</span> <span class="token class-name">InputStyle</span> <span class="token punctuation">{</span>\n  container<span class="token punctuation">:</span> ViewStyle <span class="token comment" spellcheck="true">// Same as `style` prop</span>\n  input<span class="token punctuation">:</span> ViewStyle     <span class="token comment" spellcheck="true">// Same as `inputStyle` prop</span>\n  clearIcon<span class="token punctuation">:</span> ViewStyle\n  prefix<span class="token punctuation">:</span> ViewStyle <span class="token operator">|</span> TextStyle\n  showCount<span class="token punctuation">:</span> TextStyle\n  suffix<span class="token punctuation">:</span> ViewStyle <span class="token operator">|</span> TextStyle\n  warning<span class="token punctuation">:</span> TextStyle\n  error<span class="token punctuation">:</span> TextStyle\n<span class="token punctuation">}</span>'},["code","interface InputStyle {\n  container: ViewStyle // Same as `style` prop\n  input: ViewStyle     // Same as `inputStyle` prop\n  clearIcon: ViewStyle\n  prefix: ViewStyle | TextStyle\n  showCount: TextStyle\n  suffix: ViewStyle | TextStyle\n  warning: TextStyle\n  error: TextStyle\n}"]],["h2","Ref"],["p","Ref to ",["a",{title:null,href:"http://facebook.github.io/react-native/docs/textinput.html"},"TextInput"]],["h2","FAQ"],["h2","When setting ",["code","allowClear"]," on the Android platform, why does it not work when I click clearIcon?"],["p","In Android, clearIcon will only appear when you are in editing state (",["code","focus"],").\n",["br"],"When this component is wrapped by ",["code","ScrollView"],", set the ",["code","keyboardShouldPersistTaps"]," property to ",["code","handled"]," or ",["code","always"],", the icon will respond correctly to the click event"],["pre",{lang:"jsx",highlighted:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ScrollView</span> <span class="token attr-name">keyboardShouldPersistTaps</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>always<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token operator">...</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ScrollView</span><span class="token punctuation">></span></span>'},["code",'<ScrollView keyboardShouldPersistTaps="always">\n...\n</ScrollView>']],["h3","Why Input in control can make ",["code","value"]," exceed ",["code","maxLength"],"?"],["p","When in control, component should show as what it set to avoid submit value not align with store value in Form."]],meta:{category:"Components",type:"Data Entry",title:"Input",version:"5.2.1",filename:"components/input/index.en-US.md"}}}}]);