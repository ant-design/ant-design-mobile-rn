(self.webpackChunk_ant_design_react_native=self.webpackChunk_ant_design_react_native||[]).push([[6953],{60768:t=>{t.exports={content:["article",["p","通过键盘输入内容，是最基础的表单域包装。"],["h3","Rule"],["ul",["li",["p","一般用在表单页进行信息的收集，提供文本框、文本域两种类型。"]],["li",["p","组件是布局无关的，可以配合 ",["code","List"]," 组件快速布局；同时内置了 ",["code","Form"]," 组件的联动交互。"]]],["h2","API"],["h3","Input"],["table",["thead",["tr",["th","属性"],["th","说明"],["th","类型"],["th","默认值"]]],["tbody",["tr",["td","allowClear"],["td","可以点击清除图标删除内容"],["td",["code","boolean"]," ","|"," ",["code","{ clearIcon: ReactNode }"]],["td","-"]],["tr",["td","defaultValue"],["td","输入框默认内容"],["td","string"],["td","-"]],["tr",["td","disabled"],["td","是否禁用状态，默认为 false"],["td","boolean"],["td","false"]],["tr",["td","maxLength"],["td","最大长度"],["td","number"],["td","-"]],["tr",["td","prefix"],["td","带有前缀图标的 input"],["td","ReactNode"],["td","-"]],["tr",["td","showCount"],["td","是否展示字数"],["td",["code","boolean"]," ","|"," ",["code","{ formatter: (info: { value: string, count: number, maxLength?: number }) => ReactNode }"]],["td","false"]],["tr",["td","status"],["td","设置校验状态"],["td","'error' ","|"," 'warning'"],["td","-"]],["tr",["td","inputStyle"],["td","TextInput style"],["td",["code","StyleProp<TextStyle>"]],["td","-"]],["tr",["td","style"],["td","容器(container)样式"],["td",["code","StyleProp<ViewStyle>"]],["td","-"]],["tr",["td","styles"],["td","语义化结构 style"],["td",["a",{title:null,href:"#inputstyle-语义化样式"},"InputStyle"]],["td","-"]],["tr",["td","suffix"],["td","带有后缀图标的 input"],["td","ReactNode"],["td","-"]],["tr",["td","type"],["td","声明 Input 类型，同原生 ",["a",{title:null,href:"https://reactnative.dev/docs/textinput.html#keyboardtype"},["code","keyboardType"]]," 属性"],["td","'text' ","|"," 'number' ","|","'password' ","|"," KeyboardTypeOptions"],["td",["code","text"]]],["tr",["td","value"],["td","输入框内容"],["td","string"],["td","-"]],["tr",["td","onChange"],["td","输入框内容变化时的回调，额外支持",["code","e.target.value"],"的返回"],["td",["code","(e: NativeSyntheticEvent<TextInputChangeEventData>) => void;"]],["td","-"]]]],["p","Input 的其他属性和 react-native 内置组件",["a",{title:null,href:"http://facebook.github.io/react-native/docs/textinput.html"},"TextInput"]," 一致。"],["h3","Input.TextArea"],["p","同 ",["code","Input"]," 属性，外加："],["table",["thead",["tr",["th","参数"],["th","说明"],["th","类型"],["th","默认值"]]],["tbody",["tr",["td","autoSize"],["td","自适应内容高度，可设置为 ",["code","true"]," ","|"," ",["code","false"]," 或对象：",["code","{ minRows: 2, maxRows: 6 }"]],["td","boolean ","|"," object"],["td","false"]],["tr",["td","rows"],["td","固定显示几行，",["code","autoSize"]," 优先级高"],["td","number"],["td","2"]],["tr",["td","styles"],["td","语义化结构 style"],["td",["a",{title:null,href:"#inputstyle-语义化样式"},"InputStyle"]],["td","-"]]]],["h3","InputStyle 语义化样式"],["pre",{lang:"typescript",highlighted:'<span class="token keyword">interface</span> <span class="token class-name">InputStyle</span> <span class="token punctuation">{</span>\n  container<span class="token punctuation">:</span> ViewStyle <span class="token comment" spellcheck="true">// 同 `style` prop </span>\n  input<span class="token punctuation">:</span> ViewStyle     <span class="token comment" spellcheck="true">// 同 `inputStyle` prop</span>\n  clearIcon<span class="token punctuation">:</span> ViewStyle\n  prefix<span class="token punctuation">:</span> ViewStyle <span class="token operator">|</span> TextStyle\n  showCount<span class="token punctuation">:</span> TextStyle\n  suffix<span class="token punctuation">:</span> ViewStyle <span class="token operator">|</span> TextStyle\n  warning<span class="token punctuation">:</span> TextStyle\n  error<span class="token punctuation">:</span> TextStyle\n<span class="token punctuation">}</span>'},["code","interface InputStyle {\n  container: ViewStyle // 同 `style` prop \n  input: ViewStyle     // 同 `inputStyle` prop\n  clearIcon: ViewStyle\n  prefix: ViewStyle | TextStyle\n  showCount: TextStyle\n  suffix: ViewStyle | TextStyle\n  warning: TextStyle\n  error: TextStyle\n}"]],["h2","Ref"],["p","指向 ",["a",{title:null,href:"http://facebook.github.io/react-native/docs/textinput.html"},"TextInput"]],["h2","FAQ"],["h3","在Android平台设置",["code","allowClear"],"，为什么我点击clearIcon无效？"],["p","在 Android 中, 处于编辑状态(",["code","focus"],")时 clearIcon 才会出现, \n",["br"],"且此组件被",["code","ScrollView"],"包裹时, 设置",["code","ScrollView的keyboardShouldPersistTaps"],"属性为",["code","handled"],"或",["code","always"],"时, \n",["br"],"icon才会正确响应点击事件"],["pre",{lang:"jsx",highlighted:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ScrollView</span> <span class="token attr-name">keyboardShouldPersistTaps</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>always<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token operator">...</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ScrollView</span><span class="token punctuation">></span></span>'},["code",'<ScrollView keyboardShouldPersistTaps="always">\n...\n</ScrollView>']],["h3","为何 Input 受控时，",["code","value"]," 可以超过 ",["code","maxLength"],"？"],["p","受控时，组件应该按照受控内容展示。以防止在表单组件内使用时显示值和提交值不同的问题。"]],meta:{category:"Components",type:"Data Entry",title:"Input",subtitle:"文本输入",version:"5.2.0-rc.0",filename:"components/input/index.zh-CN.md"}}}}]);