// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders ./components/modal/demo/basic.tsx correctly 1`] = `
<RCTScrollView
  style={
    Object {
      "marginTop": 20,
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#f5f5f9",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "borderTopColor": "#eeeeee",
            "borderTopWidth": 0.5,
            "position": "relative",
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "paddingLeft": 15,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomColor": "#dddddd",
                    "borderBottomWidth": 0.5,
                    "flex": 1,
                    "flexDirection": "row",
                    "minHeight": 44,
                    "paddingRight": 15,
                    "paddingVertical": 6,
                  },
                  false,
                  false,
                ]
              }
            >
              <View
                style={
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 17,
                    "textAlignVertical": "center",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "flex": 1,
                      "fontSize": 17,
                      "textAlignVertical": "center",
                    }
                  }
                >
                  切换modalType
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "minHeight": 10,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#888888",
                          "fontSize": 15,
                          "paddingTop": 3,
                          "textAlignVertical": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    \`modalType='modal'\`时将调用原生Modal
                     
                  </Text>
                </View>
              </View>
              <View
                checked={false}
                checkedChildren="modal"
                onChange={[Function]}
                style={
                  Array [
                    Object {
                      "color": "#888888",
                      "fontSize": 17,
                      "maxWidth": "70%",
                      "paddingLeft": 8,
                      "textAlign": "right",
                      "textAlignVertical": "center",
                    },
                    Object {
                      "width": 70,
                    },
                  ]
                }
                unCheckedChildren="portal"
              >
                <View
                  accessibilityRole="switch"
                  accessibilityState={
                    Object {
                      "busy": false,
                      "checked": false,
                      "disabled": false,
                      "mergedDisabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <View
                    onLayout={[Function]}
                    style={
                      Array [
                        Array [
                          Object {
                            "alignItems": "center",
                            "borderRadius": 31,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 31,
                            "padding": 0,
                            "position": "relative",
                            "width": 55,
                          },
                          Object {
                            "backgroundColor": "#cccccc",
                            "borderColor": "#cccccc",
                          },
                          Object {
                            "width": 70,
                          },
                        ],
                        false,
                        Object {
                          "minWidth": 42,
                        },
                      ]
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#ffffff",
                          "borderRadius": 27,
                          "display": "flex",
                          "elevation": 10,
                          "height": 27,
                          "justifyContent": "center",
                          "left": 2,
                          "position": "absolute",
                          "right": 0,
                          "shadowColor": "rgb(0, 35, 11)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 0.2,
                          "shadowRadius": 10,
                          "width": 27,
                        }
                      }
                    />
                    <Text
                      collapsable={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "color": "#fff",
                          "flex": 1,
                          "fontSize": 12,
                          "justifyContent": "center",
                          "marginLeft": 29,
                          "marginRight": 2,
                          "textAlign": "center",
                        }
                      }
                    >
                      portal
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#eeeeee",
              "bottom": 0,
              "height": 0.5,
              "left": 0,
              "position": "absolute",
              "right": 0,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "marginLeft": 15,
            "marginRight": 15,
          },
          undefined,
        ]
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            showModal
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            transparent:false
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            popup
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.alert
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.alert (promise)
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.opertation
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.opertation (onBackHandler)
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.prompt (default)
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.prompt (login-password)
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 9,
            },
            undefined,
          ]
        }
      />
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 5,
              "borderWidth": 1,
              "justifyContent": "center",
            },
            Object {
              "height": 47,
              "paddingLeft": 15,
              "paddingRight": 15,
            },
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#dddddd",
            },
            false,
            false,
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 18,
                },
                Object {
                  "color": "#000000",
                },
                false,
                false,
              ]
            }
          >
            Modal.prompt (secure-text)
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
