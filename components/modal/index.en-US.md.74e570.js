(self.webpackChunk_ant_design_react_native=self.webpackChunk_ant_design_react_native||[]).push([[9436],{93132:t=>{t.exports={content:["article",["p","Use to show important information for the system, and ask for user feedback. eg: When deleting an important content, pop up a Modal for secondary confirmation."],["h3","Rules"],["ul",["li",["p","Use as few as possible. Modal will interrupt user operation, only use it at important situation."]],["li",["p","Title should be concise, do not exceed 1 line; description should be concise and complete, generally no more than 2 lines."]],["li",["p","Operation buttons are up to 3(vertical), generally 1-2(horizontal); ",["a",{title:null,href:"/components/action-sheet"},"ActionSheet"]," is preferred when there are more than 3 actions."]],["li",["p","Generally put the most likely clicked button on the right side. In addition, the cancel button should always be on the left."]]],["h2","API"],["h3","Modal"],["table",["thead",["tr",["th","Properties"],["th","Descrition"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","visible"],["td","Determine whether a modal dialog is visible or not"],["td","Boolean"],["td","false"]],["tr",["td","closable"],["td","Determine whether a close (x) button is visible or not"],["td","Boolean"],["td","false"]],["tr",["td","maskClosable"],["td","Determine whether to close the modal dialog when clicked mask of it"],["td","Boolean"],["td","true"]],["tr",["td","onClose"],["td","Callback for clicking close icon x or mask"],["td","(): void"],["td","-"]],["tr",["td","transparent"],["td","transparent mode or full screen mode"],["td","Boolean"],["td","false"]],["tr",["td","popup"],["td","popup mode"],["td","Boolean"],["td","false"]],["tr",["td","animationType"],["td","Options: 'fade' / 'slide'"],["td","String"],["td","fade"]],["tr",["td","title"],["td","title"],["td","React.Element"],["td","-"]],["tr",["td","footer"],["td","footer content"],["td","Array ",["span","{text, onPress}"]],["td","[]"]],["tr",["td","onRequestClose"],["td","The ",["code","onRequestClose"]," callback is called when the user taps the hardware back button on Android or the menu button on Apple TV. Returns ",["code","true"]," to prevent ",["code","BackHandler"]," events when modal is open."],["td","(): boolean"],["td","false"]]]],["h3","Modal.alert(title, message, actions?)"],["table",["thead",["tr",["th","Properties"],["th","Descrition"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","title"],["td","title"],["td","String or React.Element"],["td","-"]],["tr",["td","message"],["td","message"],["td","String or React.Element"],["td","-"]],["tr",["td","actions"],["td","button group, ",["span","{text, onPress, style}"]],["td","Array"],["td","-"]],["tr",["td","onBackHandler"],["td","Callback of the back key (not required), returns true to close modal, false to prevent modal from closing"],["td","(): boolean"],["td","无"]]]],["h3","Modal.prompt(title, message, callbackOrActions, type?, defaultValue?)"],["table",["thead",["tr",["th","Properties"],["th","Descrition"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","title"],["td","title"],["td","String or React.Element"],["td","-"]],["tr",["td","message"],["td","message"],["td","String or React.Element"],["td","-"]],["tr",["td","callbackOrActions"],["td","button group ",["span","{text, onPress}"]," or callback"],["td","Array or Function"],["td","-"]],["tr",["td","type"],["td","prompt style"],["td","String (",["code","default"],", ",["code","secure-text"],", ",["code","login-password"],")"],["td",["code","default"]]],["tr",["td","defaultValue"],["td","Default(input whick type is password is not supported)"],["td","String"],["td","-"]],["tr",["td","placeholders"],["td",["span","'', ''"]],["td","String[]"],["td","-"]],["tr",["td","onBackHandler"],["td","Callback of the back key (not required), returns true to close modal, false to prevent modal from closing"],["td","(): boolean"],["td","无"]]]],["h3","Modal.operation(actions?, onBackHandler?)"],["table",["thead",["tr",["th","Properties"],["th","Descrition"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","actions"],["td","button group, ",["span","{text, onPress, style}"]],["td","Array"],["td","-"]],["tr",["td","onBackHandler"],["td","Callback of the back key (not required), returns true to close modal, false to prevent modal from closing"],["td","(): boolean"],["td","无"]]]],["h2","FAQ"],["h3","How to close the static Modal.method()?"],["p","You need to use ",["code","Portal.remove(key)"]," method; Take ",["code","Modal.alert"]," as an example"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Portal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/react-native\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">const</span> onOpen <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    key<span class="token punctuation">.</span>current <span class="token operator">=</span> Modal<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> onClose <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// close the Modal.alert</span>\n    Portal<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","import { Modal, Portal } from '@ant-design/react-native'\nimport { useRef } from 'react'\n\nfunction App() {\n  const key = useRef()\n\n  const onOpen = () => {\n    key.current = Modal.alert({})\n  }\n\n  const onClose = () => {\n    // close the Modal.alert\n    Portal.remove(key)\n  }\n}"]]],meta:{category:"Components",type:"Feedback",title:"Modal",filename:"components/modal/index.en-US.md"}}}}]);