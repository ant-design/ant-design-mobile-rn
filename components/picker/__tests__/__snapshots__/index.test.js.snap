// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Picker test cascade props when cascade={true} should be render MultiPicker 1`] = `
Array [
  <View
    collapsable={false}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    style={
      Object {
        "flex": 1,
        "overflow": "scroll",
      }
    }
  >
    <Text
      disabled={false}
      extra="请选择"
      onPress={[Function]}
      testID="button"
      value={Array []}
    >
      省市选择
    </Text>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "zIndex": 1000,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "flex": 1,
          },
          Object {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "flex-end",
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "backgroundColor": "black",
                "opacity": 0.5,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "white",
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderBottomColor": "#eeeeee",
                "borderBottomWidth": 0.5,
                "flexDirection": "row",
                "height": 44,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "height": 44,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#108ee9",
                    "fontSize": 17,
                    "textAlign": "center",
                  },
                  Object {},
                ]
              }
            >
              取消
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "height": 44,
                  "justifyContent": "center",
                },
              ]
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "height": 44,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#108ee9",
                    "fontSize": 17,
                    "textAlign": "center",
                  },
                  Object {},
                ]
              }
            >
              确定
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "minHeight": 34,
                  "overflow": "hidden",
                  "paddingHorizontal": 5,
                },
                Object {
                  "height": "auto",
                },
              ]
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "includeFontPadding": false,
                    "textAlign": "center",
                  },
                  undefined,
                  Object {},
                  Object {
                    "height": "auto",
                  },
                ]
              }
            >
              
              　
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
]
`;
